import os
  

MAINTENANCE_MODE = os.getenv("MAINTENANCE_MODE") == "true"
ENABLE_WAIT_RESULT = os.getenv("ENABLE_WAIT_RESULT") != "false"
ENABLE_COMPILER_OPTIONS = os.getenv("ENABLE_COMPILER_OPTIONS") != "false"
ALLOWED_LANGUAGES_FOR_COMPILER_OPTIONS = str(os.getenv("ALLOWED_LANGUAGES_FOR_COMPILER_OPTIONS")).strip().split()
ENABLE_COMMAND_LINE_ARGUMENTS = os.getenv("ENABLE_COMMAND_LINE_ARGUMENTS") != "false"
ENABLE_SUBMISSION_DELETE = os.getenv("ENABLE_SUBMISSION_DELETE") == "true"
ENABLE_CALLBACKS = os.getenv("ENABLE_CALLBACKS") != "false"
CALLBACKS_MAX_TRIES = int(os.getenv("CALLBACKS_MAX_TRIES") or 3)
CALLBACKS_TIMEOUT = float(os.getenv("CALLBACKS_TIMEOUT") or 5)
ENABLE_ADDITIONAL_FILES = os.getenv("ENABLE_ADDITIONAL_FILES") != "false"
MAX_QUEUE_SIZE = int(os.getenv("MAX_QUEUE_SIZE") or 100)
CPU_TIME_LIMIT = float(os.getenv("CPU_TIME_LIMIT") or 5)
MAX_CPU_TIME_LIMIT = float(os.getenv("MAX_CPU_TIME_LIMIT") or 15)
CPU_EXTRA_TIME = float(os.getenv("CPU_EXTRA_TIME") or 1)
MAX_CPU_EXTRA_TIME = float(os.getenv("MAX_CPU_EXTRA_TIME") or 5)
WALL_TIME_LIMIT = float(os.getenv("WALL_TIME_LIMIT") or 10)
MAX_WALL_TIME_LIMIT = float(os.getenv("MAX_WALL_TIME_LIMIT") or 20)
MEMORY_LIMIT = int(os.getenv("MEMORY_LIMIT") or 128000) # in KB
MAX_MEMORY_LIMIT = int(os.getenv("MAX_MEMORY_LIMIT") or 512000)
STACK_LIMIT = int(os.getenv("STACK_LIMIT") or 64000) # in KB
MAX_STACK_LIMIT = int(os.getenv("MAX_STACK_LIMIT") or 128000)
MAX_PROCESSES_AND_OR_THREADS = int(os.getenv("MAX_PROCESSES_AND_OR_THREADS") or 60)
MAX_MAX_PROCESSES_AND_OR_THREADS = int(os.getenv("MAX_MAX_PROCESSES_AND_OR_THREADS") or 120)
# ENABLE_PER_PROCESS_AND_THREAD_TIME_LIMIT = os.getenv("ENABLE_PER_PROCESS_AND_THREAD_TIME_LIMIT") == "true"
ENABLE_PER_PROCESS_AND_THREAD_TIME_LIMIT = os.getenv("ENABLE_PER_PROCESS_AND_THREAD_TIME_LIMIT") != "false"
ALLOW_ENABLE_PER_PROCESS_AND_THREAD_TIME_LIMIT = os.getenv("ALLOW_ENABLE_PER_PROCESS_AND_THREAD_TIME_LIMIT") != "false"
# ENABLE_PER_PROCESS_AND_THREAD_MEMORY_LIMIT = os.getenv("ENABLE_PER_PROCESS_AND_THREAD_MEMORY_LIMIT") == "true"
ENABLE_PER_PROCESS_AND_THREAD_MEMORY_LIMIT = os.getenv("ENABLE_PER_PROCESS_AND_THREAD_MEMORY_LIMIT") != "false"
ALLOW_ENABLE_PER_PROCESS_AND_THREAD_MEMORY_LIMIT = os.getenv("ALLOW_ENABLE_PER_PROCESS_AND_THREAD_MEMORY_LIMIT") != "false"
MAX_FILE_SIZE = int(os.getenv("MAX_FILE_SIZE") or 1024)
MAX_MAX_FILE_SIZE = int(os.getenv("MAX_MAX_FILE_SIZE") or 4096)
NUMBER_OF_RUNS = int(os.getenv("NUMBER_OF_RUNS") or 1)
MAX_NUMBER_OF_RUNS = int(os.getenv("MAX_NUMBER_OF_RUNS") or 20)
REDIRECT_STDERR_TO_STDOUT = os.getenv("REDIRECT_STDERR_TO_STDOUT") == "true"
MAX_EXTRACT_SIZE = int(os.getenv("MAX_EXTRACT_SIZE") or 10240)
ENABLE_BATCHED_SUBMISSIONS = os.getenv("ENABLE_BATCHED_SUBMISSIONS") != "false"
MAX_SUBMISSION_BATCH_SIZE = int(os.getenv("MAX_SUBMISSION_BATCH_SIZE") or 20)
SUBMISSION_CACHE_DURATION = float(os.getenv("SUBMISSION_CACHE_DURATION") or 1)
USE_DOCS_AS_HOMEPAGE = os.getenv("USE_DOCS_AS_HOMEPAGE") == "true"
ALLOW_ENABLE_NETWORK = os.getenv("ALLOW_ENABLE_NETWORK") != "false"
ENABLE_NETWORK = os.getenv("ENABLE_NETWORK") == "true"
DISABLE_IMPLICIT_BASE64_ENCODING = os.getenv("DISABLE_IMPLICIT_BASE64_ENCODING") == "true"


GRADER_BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Change this to have grader's log somewhere else
GRADER_LOG_DIR = os.path.join(GRADER_BASE_DIR, 'submissions', 'log')

# Set this to True, if you want the grader to save submission outputs
GRADER_OUTPUT_LOG = False